@model MinecraftWrapper.Data.Entities.ScheduledTask

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>ScheduledTask</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TaskName" class="control-label"></label>
                <input asp-for="TaskName" class="form-control" />
                <span asp-validation-for="TaskName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CronString" class="control-label"></label>
                <input asp-for="CronString" class="form-control" />
                <span asp-validation-for="CronString" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Enabled" /> @Html.DisplayNameFor( model => model.Enabled )
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ScheduledTaskType" class="control-label"></label>
                <select asp-for="ScheduledTaskType" class="form-control" asp-items="Html.GetEnumSelectList<ScheduledTaskType>()"></select>
                <span asp-validation-for="ScheduledTaskType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Command" class="control-label"></label>
                <textarea asp-for="Command" class="form-control"></textarea>
                <small class="text-muted">
                    This is not required for the "Backup" type. Additionally, you can use "{gamertag}" in both the PlayerLogin and PlayerLogout types.
                    This special placeholder string will be replaced with the gamertag of the player who logged in.
                </small>
                <span asp-validation-for="Command" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

